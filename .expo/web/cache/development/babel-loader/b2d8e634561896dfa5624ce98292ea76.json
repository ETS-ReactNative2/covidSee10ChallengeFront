{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/miriamgrigsby/Covid19Hackathon/covidSee10Challenge/Components/MainChallengePage.js\";\nimport React, { useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { TouchableOpacity, ScrollView } from 'react-native-gesture-handler';\nimport axios from 'axios';\nimport ChallengeInstance from \"./ChallengeInstance\";\n\nvar MainChallengePage = function MainChallengePage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      challenges = _React$useState2[0],\n      setChallenges = _React$useState2[1];\n\n  useEffect(function () {\n    axios.get('https://covid-see10.herokuapp.com/api/challenges/').then(function _callee(response) {\n      var dailyChallenge;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dailyChallenge = response.data.find(function (daily) {\n                return daily.daily == true;\n              });\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('dailyChallenge', JSON.stringify(dailyChallenge)));\n\n            case 3:\n              setChallenges(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  var refHook = useRef(false);\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    if (didMountRef.current) {\n      axios.get('https://covid-see10.herokuapp.com/api/challenges/').then(function (response) {\n        setChallenges(response.data);\n      });\n    } else didMountRef.current = true;\n  }, []);\n  var challengeCard = challenges.map(function (challenge) {\n    return React.createElement(ChallengeInstance, {\n      navigation: navigation,\n      title: challenge.title,\n      daily: challenge.daily,\n      key: challenge.id,\n      points: challenge.points,\n      reps: challenge.reps,\n      sport: challenge.sport,\n      workoutType: challenge.workout_type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  });\n  return React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../mainBackground.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.topContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.profile,\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    style: styles.hamburgerImage,\n    source: require(\"../hamburger.png\"),\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.dailyChallengeButton,\n    onPress: function onPress() {\n      return navigation.navigate('Daily Challenge');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.dailyChallengeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"DAILY CHALLENGE\"))), React.createElement(View, {\n    style: styles.allChallenges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, challengeCard))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderColor: \"black\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  pop: {\n    backgroundColor: \"red\"\n  },\n  topContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: \"96%\",\n    maxHeight: \"7%\",\n    justifyContent: \"space-between\",\n    overflow: \"hidden\",\n    marginTop: \"1%\"\n  },\n  background: {\n    width: '100%',\n    height: '110%',\n    opacity: 0.8\n  },\n  dailyChallengeButton: {\n    minWidth: \"75%\",\n    flex: 1,\n    borderTopStartRadius: 5,\n    borderBottomStartRadius: 5,\n    borderTopRightRadius: 5,\n    borderBottomRightRadius: 5,\n    marginRight: \"1%\",\n    justifyContent: \"center\",\n    backgroundColor: \"red\",\n    height: \"120%\",\n    marginTop: \"2%\"\n  },\n  profile: {\n    minWidth: \"25%\",\n    maxHeight: \"100%\",\n    borderWidth: 1,\n    flex: 1,\n    borderColor: \"transparent\",\n    marginTop: \"15%\"\n  },\n  hamburgerImage: {\n    maxHeight: \"70%\",\n    width: \"80%\",\n    justifyContent: \"center\",\n    alignItems: 'center'\n  },\n  allChallenges: {\n    flex: 1,\n    width: \"95%\",\n    height: \"100%\",\n    borderWidth: 2,\n    borderColor: \"black\",\n    backgroundColor: \"black\",\n    flexDirection: \"column\",\n    padding: \"1%\",\n    overflow: \"scroll\",\n    marginBottom: \"5%\"\n  },\n  dailyChallengeText: {\n    fontSize: 25,\n    textAlign: \"center\"\n  }\n});\nexport default MainChallengePage;","map":{"version":3,"sources":["/Users/miriamgrigsby/Covid19Hackathon/covidSee10Challenge/Components/MainChallengePage.js"],"names":["React","useEffect","useRef","TouchableOpacity","ScrollView","axios","ChallengeInstance","MainChallengePage","navigation","useState","challenges","setChallenges","get","then","response","dailyChallenge","data","find","daily","AsyncStorage","setItem","JSON","stringify","refHook","didMountRef","current","challengeCard","map","challenge","title","id","points","reps","sport","workout_type","styles","background","require","container","topContainer","profile","toggleDrawer","hamburgerImage","dailyChallengeButton","navigate","dailyChallengeText","allChallenges","StyleSheet","create","flex","borderColor","flexDirection","alignItems","pop","backgroundColor","width","maxHeight","justifyContent","overflow","marginTop","height","opacity","minWidth","borderTopStartRadius","borderBottomStartRadius","borderTopRightRadius","borderBottomRightRadius","marginRight","borderWidth","padding","marginBottom","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { StyleSheet, Text, View, Image, ImageBackground, AsyncStorage } from 'react-native';\nimport { TouchableOpacity, ScrollView } from 'react-native-gesture-handler';\nimport axios from 'axios'\nimport ChallengeInstance from './ChallengeInstance'\n\nconst MainChallengePage = ({ navigation }) => {\n\n    const [challenges, setChallenges] = React.useState([])\n    \n\n    useEffect(() => {\n        axios.get('https://covid-see10.herokuapp.com/api/challenges/')\n            .then(async (response) => {   \n                const dailyChallenge = response.data.find(daily => daily.daily == true)\n                await AsyncStorage.setItem('dailyChallenge', JSON.stringify(dailyChallenge))\n                setChallenges(response.data)\n            })\n    }, [])\n\n    const refHook = useRef(false)\n    const didMountRef = useRef(false)\n\n    \n\n    useEffect(() => {\n        if (didMountRef.current) {\n            axios.get('https://covid-see10.herokuapp.com/api/challenges/')\n                .then(response => {\n                    setChallenges(response.data)\n                })\n        } else didMountRef.current = true\n    },[])\n\n\n    const challengeCard = challenges.map(challenge => {\n        return <ChallengeInstance navigation={navigation} title={challenge.title} daily={challenge.daily} key={challenge.id} points={challenge.points} reps={challenge.reps} sport={challenge.sport} workoutType={challenge.workout_type} />\n    })\n\n    return (\n        <ImageBackground\n            style={styles.background}\n            source={require(\"../mainBackground.png\")}\n        >\n        <ScrollView>\n            <View style={styles.container} >\n                    <View style={styles.topContainer}>\n                        <TouchableOpacity style={styles.profile}\n                            onPress={() => navigation.toggleDrawer()}\n                        >\n                            <Image style={styles.hamburgerImage}\n                                source={require('../hamburger.png')}\n                                resizeMode=\"cover\"\n                            >\n                            </Image>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.dailyChallengeButton} onPress={() => navigation.navigate('Daily Challenge')}>\n                            <Text style={styles.dailyChallengeText}>DAILY CHALLENGE</Text>\n                        </TouchableOpacity>\n                    </View>\n                    <View style={styles.allChallenges}>\n                        {challengeCard}\n                    </View>\n            </View>\n                </ScrollView>\n        </ImageBackground>\n    )\n}\n\nconst styles = StyleSheet.create({\n\n    container: {\n        flex: 1,\n        borderColor: \"black\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    pop: {\n        backgroundColor: \"red\"\n    },\n    topContainer: {\n        flex: 1,\n        flexDirection: \"row\",\n        width: \"96%\",\n        maxHeight: \"7%\",\n        justifyContent: \"space-between\",\n        // padding: \".75%\",\n        overflow: \"hidden\",\n        marginTop: \"1%\",\n        // marginBottom: \"-2%\"\n    },\n    background: {\n        width: '100%',\n        height: '110%',\n        opacity: 0.8\n    },\n    dailyChallengeButton: {\n        minWidth: \"75%\",\n        flex: 1,\n        borderTopStartRadius: 5,\n        borderBottomStartRadius: 5,\n        borderTopRightRadius: 5,\n        borderBottomRightRadius: 5,\n        marginRight: \"1%\",\n        justifyContent: \"center\",\n        backgroundColor: \"red\",\n        height: \"120%\",\n        marginTop: \"2%\",\n    },\n    profile: {\n        minWidth: \"25%\",\n        maxHeight: \"100%\",\n        borderWidth: 1,\n        flex: 1,\n        borderColor: \"transparent\",\n        marginTop: \"15%\",\n        \n    },\n    hamburgerImage: {\n        maxHeight:\"70%\",\n        width: \"80%\",\n        justifyContent: \"center\", \n        alignItems: 'center'\n    },\n    allChallenges: {\n        flex: 1,\n        width: \"95%\",\n        height: \"100%\",\n        borderWidth: 2,\n        borderColor: \"black\",\n        backgroundColor: \"black\",\n        flexDirection: \"column\",\n        padding: \"1%\",\n        overflow: \"scroll\",\n        marginBottom: \"5%\"\n\n    },\n    dailyChallengeText: {\n        fontSize: 25,\n        textAlign: \"center\",\n    }\n});\n\nexport default MainChallengePage"]},"metadata":{},"sourceType":"module"}
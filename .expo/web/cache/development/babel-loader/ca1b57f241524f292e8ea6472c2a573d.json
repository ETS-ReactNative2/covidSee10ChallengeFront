{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/miriamgrigsby/Covid19Hackathon/covidSee10Challenge/Components/DailyChallenge.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport axios from 'axios';\n\nvar DailyChallenge = function DailyChallenge(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dailyChallenge = _React$useState2[0],\n      setDailyChallenge = _React$useState2[1];\n\n  useEffect(function () {\n    challenge();\n  }, []);\n\n  var challenge = function challenge() {\n    var dailyChallengeVar;\n    return _regeneratorRuntime.async(function challenge$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('dailyChallenge'));\n\n          case 2:\n            dailyChallengeVar = _context.sent;\n            setDailyChallenge(dailyChallengeVar);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.backButton,\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.covidIcon,\n    source: require(\"../covidIcon.png\"),\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \" Yeehaw Mf\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    borderTopWidth: 4,\n    borderColor: \"black\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  headerDiv: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: \"100%\",\n    maxHeight: \"20%\",\n    padding: \"1%\",\n    justifyContent: \"center\"\n  },\n  covidIcon: {\n    maxHeight: \"100%\",\n    width: \"110%\",\n    justifyContent: \"center\"\n  },\n  backButton: {\n    minWidth: \"25%\",\n    maxHeight: \"100%\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    width: \"70%\",\n    fontSize: 22,\n    textAlign: \"center\",\n    backgroundColor: \"red\",\n    marginLeft: \"2%\"\n  }\n});\nexport default DailyChallenge;","map":{"version":3,"sources":["/Users/miriamgrigsby/Covid19Hackathon/covidSee10Challenge/Components/DailyChallenge.js"],"names":["React","useState","useEffect","TouchableOpacity","axios","DailyChallenge","navigation","dailyChallenge","setDailyChallenge","challenge","AsyncStorage","getItem","dailyChallengeVar","styles","container","headerDiv","backButton","toggleDrawer","covidIcon","require","headerText","StyleSheet","create","flexGrow","borderTopWidth","borderColor","flexDirection","width","height","flex","maxHeight","padding","justifyContent","minWidth","fontSize","textAlign","backgroundColor","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,wBAEON,KAAK,CAACC,QAAN,EAFP;AAAA;AAAA,MAE9BM,cAF8B;AAAA,MAEdC,iBAFc;;AAIrCN,EAAAA,SAAS,CAAC,YAAM;AACbO,IAAAA,SAAS;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACkBC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CADlB;;AAAA;AACRC,YAAAA,iBADQ;AAENJ,YAAAA,iBAAiB,CAACI,iBAAD,CAAjB;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEF,MAAM,CAACG,UAAhC;AACA,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,YAAX,EAAN;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAArB;AACI,IAAA,MAAM,EAAEC,OAAO,oBADnB;AAEI,IAAA,UAAU,EAAC,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,CADJ,CADJ;AAmBH,CAhCD;;AAkCA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,QAAQ,EAAE,CADH;AAEPC,IAAAA,cAAc,EAAE,CAFT;AAGPC,IAAAA,WAAW,EAAE,OAHN;AAIPC,IAAAA,aAAa,EAAE,QAJR;AAKPC,IAAAA,KAAK,EAAE,MALA;AAMPC,IAAAA,MAAM,EAAE;AAND,GADkB;AAS7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,IAAI,EAAE,CADC;AAEPH,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPG,IAAAA,SAAS,EAAE,KAJJ;AAKPC,IAAAA,OAAO,EAAE,IALF;AAMPC,IAAAA,cAAc,EAAE;AANT,GATkB;AAmB7Bd,EAAAA,SAAS,EAAE;AACPY,IAAAA,SAAS,EAAC,MADH;AAEPH,IAAAA,KAAK,EAAE,MAFA;AAGPK,IAAAA,cAAc,EAAE;AAHT,GAnBkB;AAwB7BhB,EAAAA,UAAU,EAAE;AACRiB,IAAAA,QAAQ,EAAE,KADF;AAERH,IAAAA,SAAS,EAAE,MAFH;AAGRE,IAAAA,cAAc,EAAE;AAHR,GAxBiB;AA6B7BZ,EAAAA,UAAU,EAAE;AACRO,IAAAA,KAAK,EAAE,KADC;AAERO,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,SAAS,EAAE,QAHH;AAIRC,IAAAA,eAAe,EAAE,KAJT;AAKRC,IAAAA,UAAU,EAAE;AALJ;AA7BiB,CAAlB,CAAf;AAuCA,eAAehC,cAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { StyleSheet, Text, View, Image, AsyncStorage } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport axios from 'axios'\n\nconst DailyChallenge = ({navigation}) => {\n\n    const [dailyChallenge, setDailyChallenge] = React.useState()\n\n    useEffect(() => {\n       challenge()\n    }, [])\n\n    const challenge = async() => {\n        const dailyChallengeVar = await AsyncStorage.getItem('dailyChallenge')\n                setDailyChallenge(dailyChallengeVar)\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.headerDiv}>\n                <TouchableOpacity style={styles.backButton} \n                onPress={() => navigation.toggleDrawer()}\n                >\n                    <Image style={styles.covidIcon}\n                        source={require('../covidIcon.png')}\n                        resizeMode=\"cover\"\n                    >\n                    </Image>\n                </TouchableOpacity >\n                <Text style={styles.headerText}> Yeehaw Mf</Text>          \n\n            </View>\n        </View>\n        \n        \n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexGrow: 1,\n        borderTopWidth: 4,\n        borderColor: \"black\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    headerDiv: {\n        flex: 1,\n        flexDirection: \"row\",\n        width: \"100%\",\n        maxHeight: \"20%\",\n        padding: \"1%\",\n        justifyContent: \"center\",\n        // alignItems: \"center\"\n        \n    },\n    covidIcon: {\n        maxHeight:\"100%\",\n        width: \"110%\",\n        justifyContent: \"center\", \n    },\n    backButton: {\n        minWidth: \"25%\",\n        maxHeight: \"100%\",\n        justifyContent: \"center\"\n    },\n    headerText: {\n        width: \"70%\",\n        fontSize: 22,\n        textAlign: \"center\",\n        backgroundColor: \"red\",\n        marginLeft: \"2%\",\n        // alignSelf: \"center\"\n    },\n})\n\nexport default DailyChallenge"]},"metadata":{},"sourceType":"module"}
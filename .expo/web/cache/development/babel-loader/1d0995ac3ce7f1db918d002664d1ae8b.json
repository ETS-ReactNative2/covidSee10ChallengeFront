{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/miriamgrigsby/Covid19Hackathon/covidSee10Challenge/Components/MainPage.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport axios from 'axios';\nimport { DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport ProfilePage from \"./ProfilePage\";\nimport Assessment from \"./AssessmentPage\";\nimport NewChallenge from \"./NewChallenge\";\nimport YourChallenges from \"./YourChallenges\";\nimport VideosTab from \"./VideosTab\";\nimport Friends from \"./Friends\";\nimport LogBook from \"./LogBook\";\nimport Ranking from \"./Ranking\";\nimport Logout from \"./Logout\";\nimport DailyChallenge from \"./DailyChallenge\";\nimport MainChallengePage from \"./MainChallengePage\";\nvar Drawer = createDrawerNavigator();\n\nvar MainPage = function MainPage() {\n  return React.createElement(NavigationContainer, {\n    independent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }, React.createElement(ChallengePage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }));\n};\n\nfunction CustomDrawerContent(props) {\n  return React.createElement(DrawerContentScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 80,\n      width: 100,\n      minHeight: 100,\n      alignSelf: \"center\",\n      marginTop: \"-2%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    source: require(\"../covidIcon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), React.createElement(DrawerItem, {\n    label: function label() {\n      return React.createElement(View, {\n        style: {\n          borderBottomWidth: 1,\n          minWidth: 215,\n          alignItems: \"center\",\n          borderColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 121\n        }\n      }, \"Covid-See10\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(DrawerItemList, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar ChallengePage = function ChallengePage() {\n  return React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }));\n    },\n    drawerStyle: {\n      flex: 1,\n      marginLeft: \"-1%\",\n      maxWidth: 250,\n      backgroundColor: \"black\",\n      opacity: 0.8\n    },\n    drawerContentOptions: {\n      activeTintColor: \"white\",\n      activeBackgroundColor: \"#9a0026\",\n      inactiveBackgroundColor: 'whitesmoke',\n      opacity: 0.8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Challenges\",\n    component: MainChallengePage,\n    options: {\n      drawerIcon: function drawerIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../whiteCovidIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 40,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Daily Challenge\",\n    component: DailyChallenge,\n    options: {\n      drawerIcon: function drawerIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../fireIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 38,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Assessment\",\n    component: Assessment,\n    options: {\n      drawerIcon: function drawerIcon(_ref3) {\n        var tintColor = _ref3.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../assessmentIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 30,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"New Challenge\",\n    component: NewChallenge,\n    options: {\n      drawerIcon: function drawerIcon(_ref4) {\n        var tintColor = _ref4.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../newChallengeIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 35,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Your Challenges\",\n    component: YourChallenges,\n    options: {\n      drawerIcon: function drawerIcon(_ref5) {\n        var tintColor = _ref5.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../yourChallengeIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 35,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Videos\",\n    component: VideosTab,\n    options: {\n      drawerIcon: function drawerIcon(_ref6) {\n        var tintColor = _ref6.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../videoIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 40,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Friends\",\n    component: Friends,\n    options: {\n      drawerIcon: function drawerIcon(_ref7) {\n        var tintColor = _ref7.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../friendsIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 35,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DoesntMatter\",\n    component: LogBook,\n    options: {\n      drawerLabel: function drawerLabel() {\n        return React.createElement(View, {\n          style: {\n            borderBottomWidth: 1,\n            minWidth: 215,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 98\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 175\n          }\n        }, \"LogBook\"));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"View\",\n    component: LogBook,\n    options: {\n      drawerIcon: function drawerIcon(_ref8) {\n        var tintColor = _ref8.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../logbookIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 34,\n            height: 32,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Ranking\",\n    component: Ranking,\n    options: {\n      drawerIcon: function drawerIcon(_ref9) {\n        var tintColor = _ref9.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../rankingIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 40,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DoesntMatter2\",\n    component: ProfilePage,\n    options: {\n      drawerLabel: function drawerLabel() {\n        return React.createElement(View, {\n          style: {\n            borderBottomWidth: 1,\n            minWidth: 215,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 104\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 181\n          }\n        }, \"Account\"));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 14\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfilePage,\n    options: {\n      drawerIcon: function drawerIcon(_ref10) {\n        var tintColor = _ref10.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../profileIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 35,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Logout\",\n    component: Logout,\n    options: {\n      drawerIcon: function drawerIcon(_ref11) {\n        var tintColor = _ref11.tintColor;\n        return React.createElement(Image, {\n          source: require(\"../logoutIcon.png\"),\n          resizeMode: \"cover\",\n          style: {\n            width: 35,\n            height: 32,\n            tintColor: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderColor: \"black\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  pop: {\n    backgroundColor: \"red\"\n  },\n  topContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: \"96%\",\n    maxHeight: \"15%\",\n    justifyContent: \"space-between\",\n    padding: \".75%\",\n    overflow: \"hidden\",\n    marginTop: \"1%\"\n  },\n  background: {\n    width: '100%',\n    height: '110%',\n    opacity: 0.8\n  },\n  dailyChallengeButton: {\n    minWidth: \"80%\",\n    flex: 1,\n    borderTopStartRadius: 5,\n    borderBottomStartRadius: 5,\n    borderTopRightRadius: 5,\n    borderBottomRightRadius: 5,\n    justifyContent: \"center\",\n    backgroundColor: \"red\"\n  },\n  profile: {\n    minWidth: \"17%\",\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: \"center\",\n    borderColor: \"transparent\"\n  },\n  hamburgerImage: {\n    maxHeight: \"70%\",\n    width: \"100%\"\n  },\n  allChallenges: {\n    flex: 1,\n    flexDirection: \"column\",\n    width: \"95%\",\n    borderWidth: 2,\n    borderColor: \"black\"\n  },\n  dailyChallengeText: {\n    fontSize: 25,\n    textAlign: \"center\"\n  }\n});\nexport default MainPage;","map":{"version":3,"sources":["/Users/miriamgrigsby/Covid19Hackathon/covidSee10Challenge/Components/MainPage.js"],"names":["React","useEffect","Icon","TouchableOpacity","NavigationContainer","createDrawerNavigator","axios","DrawerContentScrollView","DrawerItemList","DrawerItem","ProfilePage","Assessment","NewChallenge","YourChallenges","VideosTab","Friends","LogBook","Ranking","Logout","DailyChallenge","MainChallengePage","Drawer","MainPage","CustomDrawerContent","props","flex","width","minHeight","alignSelf","marginTop","height","require","borderBottomWidth","minWidth","alignItems","borderColor","fontSize","color","ChallengePage","marginLeft","maxWidth","backgroundColor","opacity","activeTintColor","activeBackgroundColor","inactiveBackgroundColor","drawerIcon","tintColor","drawerLabel","styles","StyleSheet","create","container","flexDirection","pop","topContainer","maxHeight","justifyContent","padding","overflow","background","dailyChallengeButton","borderTopStartRadius","borderBottomStartRadius","borderTopRightRadius","borderBottomRightRadius","profile","borderWidth","hamburgerImage","allChallenges","dailyChallengeText","textAlign"],"mappings":"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","sourcesContent":["import React,  { useEffect } from 'react';\nimport { StyleSheet, Text, View, Image, ImageBackground, Button, Icon } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { NavigationContainer} from '@react-navigation/native';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport axios from 'axios'\nimport {\n    DrawerContentScrollView,\n    DrawerItemList,\n    DrawerItem,\n  } from '@react-navigation/drawer';\n\nimport ProfilePage  from './ProfilePage'\nimport Assessment  from './AssessmentPage'\nimport NewChallenge from './NewChallenge'\nimport YourChallenges from './YourChallenges'\nimport VideosTab from './VideosTab'\nimport Friends from './Friends';\nimport LogBook from './LogBook';\nimport Ranking from './Ranking';\nimport Logout from './Logout';\nimport DailyChallenge from './DailyChallenge';\nimport MainChallengePage from './MainChallengePage'\n\nconst Drawer = createDrawerNavigator();\n\nconst MainPage = () => {\n    // const { challengesArray } = route.params;\n    \n        return (\n             <NavigationContainer independent={true}>\n                <ChallengePage />\n            </NavigationContainer> \n        );\n}\n\n// const MainChallengePage = ({ navigation, screenprops}) => {\n \n//    const  consoleIt = () => {\n//        console.log(screenprops)\n//    }\n\n//     useEffect(() => {\n//         axios.get('https://covid-see10.herokuapp.com/api/challenges/')\n//          .then(response => console.log(response.data))\n//     }, [])\n \n  \n//     return(\n//         <ImageBackground\n//             style={styles.background}\n//             source={require(\"../mainBackground.png\")}\n//         >\n//             <View style={styles.container} >\n//                 <View style={styles.topContainer}>\n//                 <TouchableOpacity style={styles.profile}\n//                  onPress={() => navigation.toggleDrawer()}\n//                  >\n//                         <Image style={styles.hamburgerImage}\n//                             source={require('../hamburger.png')}\n//                             resizeMode=\"cover\"\n//                             >\n//                         </Image>\n//                     </TouchableOpacity>\n//                     <TouchableOpacity style={styles.dailyChallengeButton} onPress={() => navigation.navigate('Daily Challenge')}>\n//                         <Text style={styles.dailyChallengeText}>DAILY CHALLENGE</Text>\n//                     </TouchableOpacity>\n//                 </View>\n//                 <View style={styles.allChallenges}>\n\n//                 </View>\n//             </View>\n//         </ImageBackground>\n//     )\n// }\n\nfunction CustomDrawerContent(props) {\n    return (\n      <DrawerContentScrollView  >\n          <View style={{ flex: 80, width: 100, minHeight: 100, alignSelf: \"center\", marginTop: \"-2%\"}}>\n            <Image style={{ width: \"100%\", height: \"100%\", }} source={require('../covidIcon.png')} />\n        </View>\n        <DrawerItem \n        label={() => <View style={{ borderBottomWidth: 1, minWidth: 215,  alignItems: \"center\", borderColor: \"white\" }}><Text style={{ fontSize: 20, color: \"white\" }}>Covid-See10</Text></View>}\n        />        \n        <DrawerItemList \n        {...props} \n        />\n        \n      </DrawerContentScrollView>\n    );\n  }\n\nconst ChallengePage = () => {\n    return(\n        <Drawer.Navigator   \n        drawerContent={props => <CustomDrawerContent {...props} />}\n        drawerStyle={{\n            flex: 1,\n            marginLeft: \"-1%\",\n            maxWidth: 250,\n            backgroundColor: \"black\",\n            opacity: 0.8,\n            \n          }}\n          drawerContentOptions={{\n            activeTintColor: \"white\",\n            activeBackgroundColor: \"#9a0026\",\n            inactiveBackgroundColor: 'whitesmoke',\n            opacity: 0.8,\n          }}\n          >\n            <Drawer.Screen \n            name=\"Challenges\"\n            component={MainChallengePage}\n            options={ { drawerIcon: ({ tintColor }) => (\n                <Image\n                source={require(\"../whiteCovidIcon.png\")}\n                resizeMode=\"cover\"\n                style={{ width: 35, height: 40, tintColor: tintColor }}\n                    />) }}\n           />    \n            <Drawer.Screen name=\"Daily Challenge\" component={DailyChallenge}  options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../fireIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 38, tintColor: tintColor }}\n          />) }} />\n            <Drawer.Screen name=\"Assessment\" component={Assessment} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../assessmentIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 30, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"New Challenge\" component={NewChallenge} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../newChallengeIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 35, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"Your Challenges\" component={YourChallenges} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../yourChallengeIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 35, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"Videos\" component={VideosTab} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../videoIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 40, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"Friends\" component={Friends} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../friendsIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 35, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"DoesntMatter\" component={LogBook} options={{ drawerLabel: () => <View style={{ borderBottomWidth: 1, minWidth: 215,  alignItems: \"center\" }}><Text style={{ fontSize: 20, }}>LogBook</Text></View>}}/>\n            <Drawer.Screen name=\"View\" component={LogBook} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../logbookIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 34, height: 32, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"Ranking\" component={Ranking} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../rankingIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 40, tintColor: tintColor }}\n          />) }}/>\n             <Drawer.Screen name=\"DoesntMatter2\" component={ProfilePage} options={{ drawerLabel: () => <View style={{ borderBottomWidth: 1, minWidth: 215,  alignItems: \"center\" }}><Text style={{ fontSize: 20, }}>Account</Text></View>}}/>\n            <Drawer.Screen name=\"Profile\" component={ProfilePage} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../profileIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 35, tintColor: tintColor }}\n          />) }}/>\n            <Drawer.Screen name=\"Logout\" component={Logout} options={{drawerIcon: ({ tintColor }) => (\n          <Image\n            source={require(\"../logoutIcon.png\")}\n            resizeMode=\"cover\"\n            style={{ width: 35, height: 32, tintColor: tintColor }}\n          />) }}/>\n        </Drawer.Navigator>\n    )\n}\n\n\n\nconst styles = StyleSheet.create({\n    \n    container: {\n        flex: 1,\n        // borderTopWidth: 6,\n        borderColor: \"black\",\n        flexDirection: \"column\",\n        // marginTop: \"-2.75%\",\n        alignItems: \"center\", \n    },\n    pop: {\n        backgroundColor: \"red\"\n    },\n    topContainer: {\n        flex: 1,\n        // borderTopWidth: 6,\n        flexDirection: \"row\",\n        width: \"96%\",\n        maxHeight: \"15%\",\n        justifyContent: \"space-between\",\n        padding: \".75%\",\n        overflow: \"hidden\",\n        marginTop: \"1%\"\n    },\n    background: {\n        width: '100%',\n        height: '110%',\n        opacity: 0.8\n    },\n    dailyChallengeButton: {\n        minWidth: \"80%\",\n        flex: 1,\n        borderTopStartRadius: 5,\n        borderBottomStartRadius: 5,\n        borderTopRightRadius: 5,\n        borderBottomRightRadius: 5,\n        justifyContent: \"center\",\n        backgroundColor: \"red\",\n        // opacity: 0.7,\n       \n    },\n    profile: {\n        minWidth: \"17%\",\n        borderWidth: 1,\n        flex: 1,\n        justifyContent: \"center\",\n        borderColor: \"transparent\"\n    },\n    hamburgerImage: {\n        maxHeight: \"70%\",\n        width: \"100%\",\n    }, \n    allChallenges: {\n        flex: 1,\n        flexDirection: \"column\",\n        width: \"95%\",\n        borderWidth: 2,\n        borderColor: \"black\"\n    }, \n    dailyChallengeText: {\n        fontSize: 25,\n        textAlign: \"center\",\n    }\n});\n\nexport default MainPage\n"]},"metadata":{},"sourceType":"module"}